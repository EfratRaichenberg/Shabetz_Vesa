{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T450\\\\Desktop\\\\shabez_vesa\\\\Shabetz_Vesa\\\\react\\\\src\\\\pages\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport Navbar from '../components/navbar';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  _s();\n\n  const [navigateTo, setNavigateTo] = useState(false);\n  const [userState, setUserState] = useState({\n    Name: '',\n    Password: ''\n  });\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.get(`http://localhost:3001/user/signIn/'${userState.Name}'/'${userState.Password}'`).then(response => {\n      alert(response.data[0].Type);\n\n      if (response.status === 200) {\n        setNavigateTo(true);\n      }\n    }).catch(err => console.warn(err)); // props.setUser({\n    //     user:{\n    //         UserId: userD.user_id,\n    //         UserNAme: userD.Name,\n    //         password:userD.Password,\n    //         Type:userD.Type,\n    //         mail: userD.Mail,\n    //         phone : userD.Phone_number,\n    //         City : userD.City,\n    //         Neighborhood : userD.Neighborhood,\n    //         Street: userD.Street\n    //     }\n    // })\n  };\n\n  if (navigateTo) {\n    navigate('/PassengerZone');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-holder\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-items\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u05D1\\u05E8\\u05D5\\u05DA \\u05D4\\u05E9\\u05D1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                class: \"requires-validation\",\n                novalidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control\",\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: \"\\u05E9\\u05DD \\u05DE\\u05DC\\u05D0\",\n                    required: true,\n                    value: userState.Name,\n                    onChange: e => setUserState({ ...userState,\n                      Name: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"valid-feedback\",\n                    children: \"Username field is valid!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"invalid-feedback\",\n                    children: \"Username field cannot be blank!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    class: \"form-control\",\n                    type: \"password\",\n                    name: \"password\",\n                    placeholder: \"\\u05E1\\u05D9\\u05E1\\u05DE\\u05D0\",\n                    required: true,\n                    value: userState.Password,\n                    onChange: e => setUserState({ ...userState,\n                      Password: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"valid-feedback\",\n                    children: \"Password field is valid!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"invalid-feedback\",\n                    children: \"Password field cannot be blank!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-md-12 mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      class: \"form-check-input\",\n                      type: \"checkbox\",\n                      value: \"\",\n                      id: \"invalidCheck\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      class: \"form-check-label\",\n                      children: \"\\u05D6\\u05DB\\u05D5\\u05E8 \\u05D0\\u05D5\\u05EA\\u05D9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"invalid-feedback\",\n                      children: \"Please confirm that the entered data are all correct!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"form-button mt-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      id: \"submit\",\n                      type: \"submit\",\n                      class: \"btn btn-primary\",\n                      children: \"\\u05D4\\u05DB\\u05E0\\u05E1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}; // const mapStateToProps = state => {\n//     return {\n//         userDetails: state?.user\n//     };\n// };\n// const setDispatchToProps = dispatch => {\n//     return {\n//         setUser: (USER) => dispatch({ type: 'SET_USER', user: USER }),\n//     }\n// };\n// const SignInContainer = connect(mapStateToProps, setDispatchToProps)(SignIn);\n\n\n_s(SignIn, \"MWhTQmPKjzWlEi9qaoLpGtwjt68=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/T450/Desktop/shabez_vesa/Shabetz_Vesa/react/src/pages/SignIn.js"],"names":["React","useState","useNavigate","axios","Navbar","connect","SignIn","props","navigateTo","setNavigateTo","userState","setUserState","Name","Password","navigate","handleSubmit","event","preventDefault","get","then","response","alert","data","Type","status","catch","err","console","warn","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Navbar from '../components/navbar';\r\nimport {connect } from 'react-redux';\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const [navigateTo, setNavigateTo] = useState(false);\r\n    const [userState, setUserState] = useState(\r\n        {\r\n            Name: '',\r\n            Password: ''\r\n        }\r\n    );\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios.get(`http://localhost:3001/user/signIn/'${userState.Name}'/'${userState.Password}'`)\r\n        .then(response => {\r\n            alert(response.data[0].Type);\r\n            if (response.status === 200) {\r\n                \r\n                setNavigateTo(true)\r\n            }\r\n        })\r\n        .catch(err => console.warn(err));\r\n\r\n        // props.setUser({\r\n        //     user:{\r\n        //         UserId: userD.user_id,\r\n        //         UserNAme: userD.Name,\r\n        //         password:userD.Password,\r\n        //         Type:userD.Type,\r\n        //         mail: userD.Mail,\r\n        //         phone : userD.Phone_number,\r\n        //         City : userD.City,\r\n        //         Neighborhood : userD.Neighborhood,\r\n        //         Street: userD.Street\r\n        //     }\r\n        // })\r\n    };\r\n\r\n    if (navigateTo) {\r\n       navigate('/PassengerZone');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar></Navbar>\r\n        <div class=\"form-body\">\r\n            <div class=\"row\">\r\n                <div class=\"form-holder\">\r\n                    <div class=\"form-content\">\r\n                        <div class=\"form-items\">\r\n                            \r\n                            <h3>ברוך השב</h3>\r\n                            <form class=\"requires-validation\" novalidate onSubmit={handleSubmit}>\r\n\r\n                                <div class=\"col-md-12\">\r\n                                    <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"שם מלא\" required value={userState.Name}\r\n                                        onChange={(e) => setUserState({ ...userState, Name: e.target.value })} />\r\n                                    <div class=\"valid-feedback\">Username field is valid!</div>\r\n                                    <div class=\"invalid-feedback\">Username field cannot be blank!</div>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-12\">\r\n                                    <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"סיסמא\" required value={userState.Password}\r\n                                        onChange={(e) => setUserState({ ...userState, Password: e.target.value })} />\r\n                                    <div class=\"valid-feedback\">Password field is valid!</div>\r\n                                    <div class=\"invalid-feedback\">Password field cannot be blank!</div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"col-md-12 mt-3\">\r\n                                    <div class=\"form-check\">\r\n                                        <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required />\r\n                                        <label class=\"form-check-label\">זכור אותי</label>\r\n                                        <div class=\"invalid-feedback\">Please confirm that the entered data are all correct!</div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"form-button mt-3\">\r\n                                        <button id=\"submit\" type=\"submit\" class=\"btn btn-primary\">הכנס</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         userDetails: state?.user\r\n//     };\r\n// };\r\n// const setDispatchToProps = dispatch => {\r\n//     return {\r\n//         setUser: (USER) => dispatch({ type: 'SET_USER', user: USER }),\r\n//     }\r\n// };\r\n\r\n// const SignInContainer = connect(mapStateToProps, setDispatchToProps)(SignIn);\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}